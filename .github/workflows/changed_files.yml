name: List files changed as GitHub comment

on:
  pull_request

jobs:
  list-files-changed:
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed_files
        uses: tj-actions/changed-files@v4.2

      - name: Format list of changed files
        id: format
        run: |
          declare -a output

          files=(${{ steps.changed_files.outputs.all_modified_files }})
          pr_num=${{ github.event.pull_request.number }}

          function generateMainFiles() {
            html_file=${1%.md}.html
            file="<li><a href=\"https://deploy-preview-$pr_num--cockroachdb-docs.netlify.app/docs/$html_file\" target=\"_blank\" rel=\"noopener\">$1</a></li>"
            output+="$file"
          }

          function generateIncludes() {
            output+="<li>$1:</li><ul>"
            OLDIFS=$IFS
            IFS='/'
            read -ra path <<< "$1"
            IFS=$OLDIFS
            if [[ $1 == _includes* ]]
            then
              major_version=${path[1]}
            elif $1 == v* || $1 == cockroachcloud*
            then
              major_version=${path[0]}
            fi
            file_name=${path[-1]}
            mainRefs=($(grep -irl /${file_name} ${major_version} | sed -e 's/^\.\///g'))
            includeRefs=($(grep -irl /${file_name} _includes/${major_version} | sed -e 's/^\.\///g'))
            if [[ ${#mainRefs[@]} > 0 ]]
            then
              for ref in ${mainRefs[@]}; do
                generateMainFiles ${ref}
              done
            fi
            if [[ ${#includeRefs[@]} > 0 ]]
            then
              for ref in ${includeRefs[@]}; do
                if [[ "$2" == *"$ref"* ]]
                then
                  output+="<li>$ref (Error: Circular reference found. Your build will fail.)</li>"
                else
                  chain=$2:${ref}
                  generateIncludes ${ref} ${chain}
                fi
              done
            fi
            if [[ ${#includeRefs[@]} == 0 && ${#mainRefs[@]} == 0 ]]
            then
              output+="<li>Warning: include not used in any ${major_version} file or include</li>"
            fi
            output+="</ul>"
          }

          for file in ${files[@]}; do
            # only create links for Markdown files that are not includes
            if [[ $file == *.md ]] && [[ $file != _* ]]
            then
              generateMainFiles ${file}
            elif [[ $file == *.md ]] && [[ $file == _includes/releases/* ]]
            then
              OLDIFS=$IFS
              IFS='/'
              read -ra path <<< "$file"
              IFS=$OLDIFS
              major_version=${path[-2]}
              file="<li>${file}:<ul><li><a href=\"https://deploy-preview-$pr_num--cockroachdb-docs.netlify.app/docs/releases/${major_version}.html\" target=\"_blank\" rel=\"noopener\">releases/${major_version}.md</a></li></ul></li>"
              output+="$file"
            elif [[ $file == _includes/v* || $file == _includes/cockroachcloud* || $file == images/* ]] && [[ $file != *.json ]] && [[ $file != *.gitignore* ]]
            then
              generateIncludes $file
            else
              output+="<li>$file</li>"
            fi
          done;
          body="${output[@]}"
          echo ::set-output name=body::$body

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Files changed

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            <h3>Files changed:</h3><ul>${{ steps.format.outputs.body }}</ul>
