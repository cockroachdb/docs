{%- assign versions = site.data.versions | where_exp: "versions", "versions.major_version != site.versions['dev']" | where_exp: "versions", "versions.major_version != site.versions['stable']" | map: "major_version" -%}
{%- comment -%} versions iterates through the list of major versions (e.g., v21.2) in _data/versions.csv and returns all releases that are not dev or stable. We then pull only the major version name instead of the whole dictionary with map: "major_version" {%- endcomment -%}
{
  "title": "Latest Production Release",
  "urls": [
    "/releases/{{ site.versions["stable"] }}.html"
  ]
}{% unless site.versions["stable"] == site.versions["dev"] %},
{
  "title": "Latest Testing Release",
  "urls": [
    "/releases/{{ site.versions["dev"] }}.html"
  ]
}{% endunless %},
{
  "title": "CockroachDB Releases",
  "urls": [
    "/releases/index.html",
    "/releases/"
  {% for v in versions %}
    ,"/releases/{{ v }}.html"
  {% endfor %}
  ]
},
{
  "title": "Staged Release Process",
  "urls": [
    "/releases/staged-release-process.html"
  ]
},
{
  "title": "Release Support Policy",
  "urls": [
    "/releases/release-support-policy.html"
  ]
},
{
  "title": "Known Limitations",
  "urls": [
    "/${VERSION}/known-limitations.html"
  ]
},
{% assign advisories = site.pages | where_exp: "advisories", "advisories.path contains 'advisories'" | where_exp: "advisories", "advisories.index != 'true'" %}
{
 "title": "Technical Advisories",
 "urls": [
    "/advisories/index.html"
   {% for x in advisories %}
    ,"{{ x.url }}"
   {% endfor %}
 ]
},
{
  "title": "Cloud Releases",
  "urls": [
    "/releases/cloud.html"
  ]
},
{
  "title": "Kubernetes Operator",
  "urls": [
    "/releases/kubernetes-operator.html"
  ]
}
